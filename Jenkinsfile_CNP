#!groovy

@Library("Infrastructure")

String product = "div"
String component = "ccd-definitions"

withPipeline("nodejs", product, component) {
  after('test') {
    // enable yarn audit and send message on master branch only
    try {
      sh 'yarn audit'
    } catch (error) {
      onMaster {
        slackSend(channel: '#div-dev', color: 'warning', message: "Yarn Audit has detected vulnerabilities in ${env.JOB_NAME}. You can check if there are patches for them in the full report, build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
      }
    }
    stage('Generate Divorce Case excel file') {
      sh 'yarn generate-excel-all'
    }
    stage('Generate Bulk Case excel file') {
      sh 'yarn generate-bulk-excel-all'
    }
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
  }

  onMaster {
    enableSlackNotifications('#div-dev')
  }
}
